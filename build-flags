#!/bin/bash

# Currently only Linux and Mac OSX are supported platforms

ALL=( "python" "numpy" "gr" )
SUPPORTED_OS=( "Darwin" "Linux" )

OS=$(uname -s)


array_contains() {
    # first argument: key, other arguments: array contains (passing by ${array[@]})
    local e
    for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
    return 1
}

python_flags() {
    local DARWIN_LOCAL_FRAMEWORK="/usr/local/Library/Frameworks"
    local DARWIN_FRAMEWORK="/System/Library/Frameworks"
    local LINUX_LOCAL_INCLUDE="/usr/local/include/python2.7"
    local LINUX_INCLUDE="/usr/include/python2.7"
    local LINUX_LOCAL_LIB="/usr/local/lib/python2.7"
    local LINUX_LIB="/usr/lib/python2.7"
    local INC_FLAGS
    local LIB_FLAGS

    case "${OS}" in
        Darwin)
            if [ -d "${DARWIN_LOCAL_FRAMEWORK}" ]; then
                INC_FLAGS="-F${DARWIN_LOCAL_FRAMEWORK}"
                LIB_FLAGS="-F${DARWIN_LOCAL_FRAMEWORK} -framework Python"
            else
                INC_FLAGS="-F${DARWIN_FRAMEWORK}"
                LIB_FLAGS="-F${DARWIN_FRAMEWORK} -framework Python"
            fi
            ;;
        Linux)
            if [ -d "${LINUX_LOCAL_INCLUDE}" ]; then
                INC_FLAGS="-I${LINUX_LOCAL_INCLUDE}"
                LIB_FLAGS="-L${LINUX_LOCAL_LIB} -lpython2.7"
            else
                INC_FLAGS="-I${LINUX_INCLUDE}"
                LIB_FLAGS="-L${LINUX_LIB} -lpython2.7"
            fi
            ;;
    esac

    eval "${1}=\"${INC_FLAGS}\""
    eval "${2}=\"${LIB_FLAGS}\""
}

numpy_flags() {
    local DARWIN_LOCAL_INCLUDE="/usr/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numpy/core/include"
    local DARWIN_INCLUDE="/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numpy/core/include"
    local LINUX_LOCAL_INCLUDE="/usr/local/lib/python2.7/site-packages/numpy/core/include"
    local LINUX_INCLUDE="/usr/lib/python2.7/site-packages/numpy/core/include"
    local LINUX_ALT_INCLUDE="/usr/lib64/python2.7/site-packages/numpy/core/include"
    local DEBIAN_INCLUDE="/usr/lib/python2.7/dist-packages/numpy/core/include"
    local INC_FLAGS

    case "${OS}" in
        Darwin)
            if [ -d "${DARWIN_LOCAL_INCLUDE}" ]; then
                INC_FLAGS="-I${DARWIN_LOCAL_INCLUDE}"
            else
                INC_FLAGS="-I${DARWIN_INCLUDE}"
            fi
            ;;
        Linux)
            if [ -d "${LINUX_LOCAL_INCLUDE}" ]; then
                INC_FLAGS="-I${LINUX_LOCAL_INCLUDE}"
            elif [ -d "${DEBIAN_INCLUDE}" ]; then
                INC_FLAGS="-I${DEBIAN_INCLUDE}"
            elif [ -d "${LINUX_INCLUDE}" ]; then
                INC_FLAGS="-I${LINUX_INCLUDE}"
            elif [ -d "${LINUX_ALT_INCLUDE}" ]; then
                INC_FLAGS="-I${LINUX_ALT_INCLUDE}"
            fi
            ;;
    esac

    eval "${1}=\"${INC_FLAGS}\""
    eval "${2}=\"\""
}

gr_flags() {
    local POSSIBLE_GR_DIRS=( "/usr/local/gr" "/usr/gr" "/opt/gr" )
    local INC_FLAGS
    local LIB_FLAGS

    for i in ${POSSIBLE_GR_DIRS[@]}; do
        if [ -d "${i}" ]; then
            INC_FLAGS="-I${i}/include"
            LIB_FLAGS="-L${i}/lib -lGR -lGR3"
            break
        fi
    done

    eval "${1}=\"${INC_FLAGS}\""
    eval "${2}=\"${LIB_FLAGS}\""
}

help() {
    echo "${0} [options] [libraries]"
    echo "Prints compiler flags for given libraries."
    echo "Possible libraries: ${ALL[*]}"
    echo "Possible options: --include-flags, --lib-flags"
    echo
}

main() {
    if ! array_contains "${OS}" "${SUPPORTED_OS[@]}"; then
        echo "Sorry, your operating system is currently not supported."
        exit 1
    fi
    if array_contains "--help" "$@"; then
        help
        exit 0
    fi

    if [ ! -z "${*//--*/}" ]; then
        FLAGS_FOR=( ${*/#--*/} )
    else
        FLAGS_FOR=( "${ALL[@]}" )
    fi
    OPTIONS=( ${*/#[a-z]*/} )

    INC_FLAGS=
    LIB_FLAGS=
    for i in ${FLAGS_FOR[@]}; do
        eval "${i}_flags CURRENT_INC_FLAGS CURRENT_LIB_FLAGS"
        INC_FLAGS="${INC_FLAGS} ${CURRENT_INC_FLAGS}"
        LIB_FLAGS="${LIB_FLAGS} ${CURRENT_LIB_FLAGS}"
    done

    if [ -z "${OPTIONS[*]}" ]; then
        echo "${INC_FLAGS} ${LIB_FLAGS}"
    else
        if array_contains "--include-flags" "${OPTIONS[@]}"; then
            echo -n "${INC_FLAGS} "
        fi
        if array_contains "--lib-flags" "${OPTIONS[@]}"; then
            echo -n "${LIB_FLAGS} "
        fi
        echo
    fi
}

main $*
